module attributes {llvm.data_layout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128", llvm.target_triple = "x86_64-unknown-linux-gnu"} {
  func.func @main_graph(%arg0: tensor<1x32xf32>) -> tensor<1x16xf32> attributes {input_names = ["x"], output_names = ["71"]} {
    %0 = onnx.Constant dense<146> : tensor<ui8>
    %1 = onnx.Constant dense<0.0193496719> : tensor<f32>
    %2 = "onnx.QuantizeLinear"(%arg0, %1, %0) {axis = 1 : si64, onnx_node_name = "/quant/QuantizeLinear"} : (tensor<1x32xf32>, tensor<f32>, tensor<ui8>) -> tensor<1x32xui8>
    %3 = onnx.Constant dense<0.0193496719> : tensor<f32>
    %4 = onnx.Constant dense<146> : tensor<ui8>
    %5 = "onnx.DequantizeLinear"(%2, %3, %4) {axis = 1 : si64, onnx_node_name = "/fc1/DequantizeLinear"} : (tensor<1x32xui8>, tensor<f32>, tensor<ui8>) -> tensor<1x32xf32>
    %6 = onnx.Constant dense<"0xtensor<64x32xi8>
    %7 = onnx.Constant dense<0.0013856095> : tensor<1xf32>
    %8 = onnx.Constant dense<0> : tensor<1xi8>
    %9 = "onnx.DequantizeLinear"(%6, %7, %8) {axis = 1 : si64, onnx_node_name = "/fc1/DequantizeLinear_1"} : (tensor<64x32xi8>, tensor<1xf32>, tensor<1xi8>) -> tensor<64x32xf32>
    %10 = onnx.Constant dense<1> : tensor<1xi64>
    %11 = onnx.ConstantOfShape(%10) {onnx_node_name = "/fc1/ConstantOfShape", value = dense<0> : tensor<1xi32>} : (tensor<1xi64>) -> tensor<1xi32>
    %12 = onnx.Constant dense<[5770, -342, 4029, -1007, 6238, 1356, 4677, 798, -4606, 4641, -703, -4449, -2861, -1403, 5649, 5859, -6078, -5803, 3716, -59, 6204, 3521, -4462, -1495, -135, -3101, 4029, -1704, 2413, 172, 5917, 4554, -39, 6109, -4971, 3936, 3246, -2968, 2366, -1448, -383, -2660, -3804, -2291, 3637, -2013, 4923, 2325, -5471, 3986, -944, -6276, -4064, 597, -6582, -4528, 6318, -6205, 2447, 1081, 1671, -2995, -3748, 4341]> : tensor<64xi32>
    %13 = onnx.Constant dense<2.68110889E-5> : tensor<1xf32>
    %14 = "onnx.DequantizeLinear"(%12, %13, %11) {axis = 1 : si64, onnx_node_name = "/fc1/DequantizeLinear_2"} : (tensor<64xi32>, tensor<1xf32>, tensor<1xi32>) -> tensor<64xf32>
    %15 = "onnx.Gemm"(%5, %9, %14) {alpha = 1.000000e+00 : f32, beta = 1.000000e+00 : f32, onnx_node_name = "/fc1/Gemm", transA = 0 : si64, transB = 1 : si64} : (tensor<1x32xf32>, tensor<64x32xf32>, tensor<64xf32>) -> tensor<1x64xf32>
    %16 = onnx.Constant dense<0.0159176141> : tensor<f32>
    %17 = onnx.Constant dense<136> : tensor<ui8>
    %18 = "onnx.QuantizeLinear"(%15, %16, %17) {axis = 1 : si64, onnx_node_name = "/fc1/QuantizeLinear"} : (tensor<1x64xf32>, tensor<f32>, tensor<ui8>) -> tensor<1x64xui8>
    %19 = onnx.Constant dense<0.0159176141> : tensor<f32>
    %20 = onnx.Constant dense<136> : tensor<ui8>
    %21 = "onnx.DequantizeLinear"(%18, %19, %20) {axis = 1 : si64, onnx_node_name = "/act1/DequantizeLinear"} : (tensor<1x64xui8>, tensor<f32>, tensor<ui8>) -> tensor<1x64xf32>
    %22 = "onnx.Relu"(%21) {onnx_node_name = "/act1/Relu"} : (tensor<1x64xf32>) -> tensor<1x64xf32>
    %23 = "onnx.QuantizeLinear"(%22, %19, %20) {axis = 1 : si64, onnx_node_name = "/act1/QuantizeLinear"} : (tensor<1x64xf32>, tensor<f32>, tensor<ui8>) -> tensor<1x64xui8>
    %24 = onnx.Constant dense<0.0159176141> : tensor<f32>
    %25 = onnx.Constant dense<136> : tensor<ui8>
    %26 = "onnx.DequantizeLinear"(%23, %24, %25) {axis = 1 : si64, onnx_node_name = "/fc2/DequantizeLinear"} : (tensor<1x64xui8>, tensor<f32>, tensor<ui8>) -> tensor<1x64xf32>
    %27 = onnx.Constant dense<"0xDEBE9E797F2FB3058B4DC35F34C2EBC57CDB557A8A07880AC0D4F056CBF369A599DAC1E7511D0611F144AD70A9A1DD582821B38D924401EC579C3E00D8454D338D66A1F3C929B00EAC69B0CD84D5BAE0B9346DED2170C9E9DA34829FEEF430586652B1D268C370046A6E0B0DF47A81EF86A139EA0C66026A8C7F276CC7DDAD6703DCA9035BC4B9BDC631C042AEE032D4E5FEBAB1CE4040D9CFE920FB6FB09FD37E4CD930548497849EE8D3FAA060D0D9E3BE1433FC634CB372859FB9E7B562690D5E7F4019D9D0B917036FC6C32F3592BC84D64467FB8D2009A8267245071191C50931F5512C1A6BECCFE94FEBB37B8A2574609263E218E5B915AD2AD9D70EA40C2B5657222684B91493113FC5B5913E4B00FDC8D7CAC7D51D675894A6895085A92B5FAC9446BAE7C1D5711655F9DD117EDD341C1B6ADC13C8D8382E70C19004EA105B8CA120654816390FA68D0A71E0401292EEFB301641906566722F11798F54E246EBC10EFB67C6BFFF18558C08CA0B3441E6118312F4CFED708BDA7D47624ACB14798D5C791E02484954796D43315D0A5ADFCC24BCA7CF0AA2106F844E050666062716C7720478E9F14388E4F1879F9D30FF4F4DE7AFE72538007C6053F8EFA3EECBD72F76D949D4CC045869F37887D546109E57A10E5961CCA1532A3D9281FDD0E3EC2ED6BA6C76458124E3C99BCC9FE125B163D4D5174A0A962DFA97DC135A5BBBDED9B5689C7DEB17C71412DB7883475983917D8DCDA9FC6534663C67FBF4797491D30C6FB42F0C842C18EA39F4E96E68F8C1EDD143C3B023C67E31A59475ACDB2C09C9A1D25573EEB985BCD2F1D39F0CDF3331DC75371CC4B60D93066E6DE596B7CE1F4CF8B7F4E23CB321810E61186FAB6ACA3C2BFF8D55A5BEDDB770B3705DF293BC4F4766E9EE7A79670ABAEE0118DAF847326B3E06D8DB773E7F07C5CF6817AF8448E1303F8CFB03FFD63A82FD68181B09E84460563A2892F013813878B9BE43B75A2789F5A6BE8E2638C139FC8B95DDCC2F066887F3CAEE91F8DFAC7DBC4B830D9583EF3A9561C94A55C0640B18ECF974C932179C97D5824A61D56E49C4A9B01A395061AAF08AF681E9BDD24D674566B934FD20973F830E7A64022F959AEDA4E068FDF59D33924BB0F7A336A9854B8862421966FC2D9523F6816106E277229DF05FED4D45AF1C3ED6C6EF7A9B0B87B44CA6731C0F110327FB399DE0A3BA3C6DCCC8E02CC34424AE85535C5DDE77F68828827FA35B0A8C22DE0DEC29D868F65020B92CB7C2542CC16A2F23E7236E37EB6CEA4F49AB7E44A7297D65BE48AFDDA8A5B251304B467FA9F3F02D38C5FBEE6E0F3DF593CF8E4806D2FFC383D9EC758A8A61AD52330C0D8F2CE2EBAED96A4867989D47ABC01DD512F379518EB0DF74606CB3592217D58A0EDBAD959741C6C4B9D7F4DBE34C447DB286DE"> : tensor<16x64xi8>
    %28 = onnx.Constant dense<9.79857519E-4> : tensor<1xf32>
    %29 = onnx.Constant dense<0> : tensor<1xi8>
    %30 = "onnx.DequantizeLinear"(%27, %28, %29) {axis = 1 : si64, onnx_node_name = "/fc2/DequantizeLinear_1"} : (tensor<16x64xi8>, tensor<1xf32>, tensor<1xi8>) -> tensor<16x64xf32>
    %31 = onnx.Constant dense<1> : tensor<1xi64>
    %32 = onnx.ConstantOfShape(%31) {onnx_node_name = "/fc2/ConstantOfShape", value = dense<0> : tensor<1xi32>} : (tensor<1xi64>) -> tensor<1xi32>
    %33 = onnx.Constant dense<[-7194, 3132, -4168, 3464, -6591, -2120, -6698, -2762, -5537, -7337, -5050, -3015, -2522, 1363, 3077, -5213]> : tensor<16xi32>
    %34 = onnx.Constant dense<1.55969938E-5> : tensor<1xf32>
    %35 = "onnx.DequantizeLinear"(%33, %34, %32) {axis = 1 : si64, onnx_node_name = "/fc2/DequantizeLinear_2"} : (tensor<16xi32>, tensor<1xf32>, tensor<1xi32>) -> tensor<16xf32>
    %36 = "onnx.Gemm"(%26, %30, %35) {alpha = 1.000000e+00 : f32, beta = 1.000000e+00 : f32, onnx_node_name = "/fc2/Gemm", transA = 0 : si64, transB = 1 : si64} : (tensor<1x64xf32>, tensor<16x64xf32>, tensor<16xf32>) -> tensor<1x16xf32>
    %37 = onnx.Constant dense<0.00384936598> : tensor<f32>
    %38 = onnx.Constant dense<133> : tensor<ui8>
    %39 = "onnx.QuantizeLinear"(%36, %37, %38) {axis = 1 : si64, onnx_node_name = "/fc2/QuantizeLinear"} : (tensor<1x16xf32>, tensor<f32>, tensor<ui8>) -> tensor<1x16xui8>
    %40 = onnx.Constant dense<0.00384936598> : tensor<f32>
    %41 = onnx.Constant dense<133> : tensor<ui8>
    %42 = "onnx.DequantizeLinear"(%39, %40, %41) {axis = 1 : si64, onnx_node_name = "/dequant/DequantizeLinear"} : (tensor<1x16xui8>, tensor<f32>, tensor<ui8>) -> tensor<1x16xf32>
    return %42 : tensor<1x16xf32>
  }
  "onnx.EntryPoint"() {func = @main_graph} : () -> ()
}
